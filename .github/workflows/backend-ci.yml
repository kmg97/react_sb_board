name: backend-ci

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
# ------------------------------------------------------------------
# 1) 빌드 Job – Maven 빌드 후 Docker 이미지 Build & Push
# ------------------------------------------------------------------
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      actions: write

    steps:
      # 1. 소스 체크아웃
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main

      # 2. JDK 설치 + Maven 로컬 레포지토리 캐싱
      - name: Set up JDK 17 & cache
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven
          cache-dependency-path: backend/pom.xml

      # 3. Maven 빌드
      - name: Build with Maven
        working-directory: backend
        run: |
          chmod +x ./mvnw
          ./mvnw clean package -DskipTests

      # 4. pom.xml 값 추출
      - name: Extract Docker image info & JAR name
        id: meta
        working-directory: backend
        run: |
          IMAGE=$(./mvnw help:evaluate -Dexpression=docker.image.prefix -q -DforceStdout)/$(./mvnw help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
          TAG=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)
          JAR=$(./mvnw help:evaluate -Dexpression=project.build.finalName -q -DforceStdout).jar
          echo "image=${IMAGE}" >> $GITHUB_OUTPUT
          echo "tag=${TAG}"   >> $GITHUB_OUTPUT
          echo "jar=${JAR}"   >> $GITHUB_OUTPUT

      # 5. Docker Buildx / 로그인
      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 6. 이미지 빌드 & 푸시
      - name: Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          build-args: |
            JAR_FILE=target/${{ steps.meta.outputs.jar }}
          tags: ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.tag }}
      # 7. deploy.yml 트리거 호출
      - name: Trigger Deploy
        if: success()
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: deploy-service
          client-payload: |
            {
              "service": "backend",
              "tag": "${{ steps.meta.outputs.tag }}"
            }
